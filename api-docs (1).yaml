openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:3001
  description: Generated server url
paths:
  /events/{id}:
    get:
      tags:
      - events-controller
      operationId: getEventById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Event'
    put:
      tags:
      - events-controller
      operationId: updateEventById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEventDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Event'
    delete:
      tags:
      - events-controller
      operationId: deleteEventById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
  /events:
    get:
      tags:
      - events-controller
      operationId: getEvents_1
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        required: false
        schema:
          type: string
          default: id
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageEvent'
    post:
      tags:
      - events-controller
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEventDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventsResponseDTO'
  /auth/register:
    post:
      tags:
      - auth-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newUserPayload:
                  $ref: '#/components/schemas/NewUserDTO'
                mailFrom:
                  type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UsersResponseDTO'
  /auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserLoginResponseDTO'
  /events/{id}/upload:
    patch:
      tags:
      - events-controller
      operationId: uploadImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Event'
  /users:
    get:
      tags:
      - users-controller
      operationId: getUsers
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: surname
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: id
        in: query
        required: false
        schema:
          type: string
          default: id
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUser'
  /users/{id}/demote:
    get:
      tags:
      - users-controller
      operationId: demote
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}/admin:
    get:
      tags:
      - users-controller
      operationId: setAdmin
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /users/me:
    get:
      tags:
      - users-controller
      operationId: getMyProfile
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /users/me/unbook/{id}:
    get:
      tags:
      - users-controller
      operationId: removeBooking
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /users/me/events:
    get:
      tags:
      - users-controller
      operationId: getEvents
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: orderBy
        in: query
        required: false
        schema:
          type: string
          default: id
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageEvent'
  /users/me/book/{id}:
    get:
      tags:
      - users-controller
      operationId: bookEvent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorsDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Event'
components:
  schemas:
    ErrorsDTO:
      type: object
      properties:
        message:
          type: string
        localDateTime:
          type: string
          format: date-time
    NewEventDTO:
      required:
      - date
      - description
      - location
      - title
      type: object
      properties:
        title:
          maxLength: 30
          minLength: 3
          type: string
        description:
          maxLength: 30
          minLength: 3
          type: string
        date:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: string
        location:
          maxLength: 30
          minLength: 3
          type: string
        maxParticipants:
          maximum: 10000
          minimum: 3
          type: integer
          format: int32
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        location:
          type: string
        imageUrl:
          type: string
        maxParticipants:
          type: integer
          format: int32
    EventsResponseDTO:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
    NewUserDTO:
      required:
      - email
      - name
      - password
      - surname
      - username
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 3
          type: string
        name:
          maxLength: 20
          minLength: 3
          type: string
        surname:
          maxLength: 20
          minLength: 3
          type: string
        email:
          type: string
        password:
          maxLength: 40
          minLength: 3
          type: string
    UsersResponseDTO:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
    UserLoginDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    UserLoginResponseDTO:
      type: object
      properties:
        token:
          type: string
    PageUser:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/User'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        unpaged:
          type: boolean
        paged:
          type: boolean
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
    PageEvent:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
